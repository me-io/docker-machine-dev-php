worker_processes  auto;
worker_rlimit_nofile 100000;

# error_log  /var/log/nginx/error.log warn;
error_log /dev/stderr;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
}

http {
    ### EXTRA
    ## prevenet server version in the headers
    server_tokens off;
    server_names_hash_bucket_size 128;

    ## Index
    autoindex off;
    index index.html index.php;

    ## Size Limits & Buffer Overflows
    ## ensure zero calls are written to disk
    client_body_buffer_size     2m;
    client_header_buffer_size   16k;
    client_max_body_size        16M;
    large_client_header_buffers 8 512k;
    client_body_temp_path       /tmp/client_body_temp;

    # allow odd HTTP headers from Barracuda devices http://stackoverflow.com/questions/8300136/where-does-the-cuda-cliip-http-header-come-from
    underscores_in_headers on;

    ## Timeouts, this conf prevent php-fpm cpu overload, a little...
    client_header_timeout 240;
    client_body_timeout   240;
    keepalive_timeout     65;
    send_timeout          10;
    port_in_redirect	  off;
    sendfile              on;
    tcp_nopush            on;
    tcp_nodelay           on;

    ## Gzipping is an easy way to reduce page weight
    gzip                on;
    gzip_vary           on;
    gzip_proxied        any;
    gzip_types          application/javascript application/x-javascript text/javascript text/css;
    gzip_disable        "MSIE [1-6].(?!.*SV1)";
    gzip_buffers        16 8k;
    gzip_comp_level     6;
    gzip_min_length     1024;


    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  /var/log/nginx/access.log  main;

    # sendfile        on;
    # tcp_nopush     on;

    # keepalive_timeout  65;

    # gzip  on;


    ### EXTRA
    ## Log formats
    log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $request_time "$host" "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$server_name" "$upstream_addr" $upstream_connect_time - $upstream_response_time - $msec';
    access_log /dev/stdout upstreamlog;

    include /etc/nginx/conf.d/*.conf;
}
